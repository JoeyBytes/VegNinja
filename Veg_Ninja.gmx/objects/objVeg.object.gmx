<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBrocolli</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//*****************************************************************************
//
//  Veg Ninja game
//
//*****************************************************************************

pauseHspeed  = 0;
pauseVspeed  = 0;
pauseGravity = 0;

image_index       = 0;      // Use the first subimage
image_speed       = 0;      // Don't animate
gravity_direction = 270;    // Downward gravity
gravity           = 0.2;    // Strength of gravity

vspeed = random_range(-15, -18);                    // Give the veg a variable push upwards
hspeed = (room_width/2-x)/50+random_range(-5, 5);   // Give veg sideways movement based on its position

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//*****************************************************************************
//
//  Veg Ninja game
//
//*****************************************************************************

// Split the veg into its smaller parts
if (sprite_index != sprTNT)
{
    var inst;
    inst = instance_create(x, y, objVegSplit);
    inst.sprite_index = sprite_index;
    inst.image_index  = 1;
    inst.image_angle  = image_angle;
    inst.vspeed       = vspeed + lengthdir_x(2, image_angle+90);    // Push away this peice slightly
    inst.hspeed       = hspeed + lengthdir_y(2, image_angle+90);
    inst.gravity      = gravity;
    
    inst = instance_create(x, y, objVegSplit);
    inst.sprite_index = sprite_index;
    inst.image_index  = 2
    inst.image_angle  = image_angle;
    inst.vspeed       = vspeed + lengthdir_x(2, image_angle-90);
    inst.hspeed       = hspeed + lengthdir_y(2, image_angle-90);
    inst.gravity      = gravity;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This alarm is only triggered if you hit a TNT carrot
lives -= 1;
if (lives &lt;= 0)
{
if (!instance_exists(objGameOver))
    {
    instance_create(room_width/2, room_height/2, objGameOver);
    }
    
    // log valid/invalid objects sliced
    var file, str;
    file = file_text_open_append("Log.txt");
    file_text_write_real(file, score);
    file_text_write_string(file, "|");
    file_text_write_real(file, global.Lives);
    file_text_writeln(file);
    file_text_close(file);
    
    // send valid/invalid objects sliced to db
    url = "http://104.131.21.237/";
    url_route = "log"; 
    dev_id = device_get_id();
    DB_PASSWORD = "9aa97b27f8f9ceb45dea4a9fda84c2a0bd8759af97e82783";
    var str = "id=" + dev_id + "&amp;sliced=" + string(score) + "&amp;lives=" + string(global.Lives) + "&amp;password=" + DB_PASSWORD
    show_message(url + url_route +  "?" + str);    
    post = http_post_string(url + url_route + "?", str);

}

instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//*****************************************************************************
//
//  Veg Ninja game
//
//*****************************************************************************

// Bounce veg off the side walls by reversing its horizontal speed
if (x &lt; 0) || (x &gt; room_width)
{
x -= hspeed;            // Push the veg back to where it was BEFORE this collision
hspeed = -hspeed/2;     // Reverse and half the horizontal speed, because vegetables aren't that bouncy
}


// Base veg rotation on its horizontal speed
image_angle += hspeed/2;


// Destroy when out of view
if (y &gt; room_height+200)        // You'll notice this is 100 pixels lower than where the veg spawned
{
instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
